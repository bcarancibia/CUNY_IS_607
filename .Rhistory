install.packages("ggplot2")
lm.result=simple.lm(x,y)
lm.result <- simple.lm(x,y)
simple.lm
residuals(lm_age)
getWd()
getwd()
data <- read.table("/Users/bcarancibia/CUNY_IS_605/assign-11/auto-mpg.data")
data <- read.table("/Users/bcarancibia/CUNY_IS_605/assign11/auto-mpg.data")
View(data)
names(data) <- c("displacement", "horsepower", "weight", "acceleration", "mpg")
View(data)
auto <- lm(data$mpg ~ data$displacement + data$horsepower + data$weight+ data$acceleration, data=data)
install.packages("lattic")
install.packages("lattice")
install.packages("mosaic")
install.packages("zoo")
devtools::install_github("rstudio/rmarkdown")
install.packages("devtools")
devtools::install_github("rstudio/rmarkdown")
install.packages("microbench")
install.packages("microbenchmark")
require(microbenchmark)
mean <- function(a)
{
# Local Vars
sum <- 0
count <- length(a)
for ( x in a)
{
sum <- sum + x
}
m <- sum / count
# Return
return(m)
}
a <- sample(1:50, 100000000, replace=TRUE)
results <- microbenchmark::microbenchmark(mean(a), times=1)
print(results)
require(microbenchmark)
sqrt <- function(a)
{
sqrt(a),
a ^ 0.5
}
x <- runif(100000)
microbenchmark(
sqrt(x),
x ^ 0.5
)
run  <- function() {
ssize <- 10000
nboot <- 1000
x <- runif(ssize)
y <- replicate(nboot, sd(sample(x, ssize, TRUE)))
sd(y)
}
for (i in 1:4) {
cat(system.time(run())[3], " ")
}
install.packages("dplyr")
install.packages("plyr")
devtools::install_github("nicolewhite/RNeo4j")
require(RNeo4j)
clear(graph)
graph = startGraph("http://localhost:7474/db/data/")
importSample(graph, "tweets")
neo4j = getUniqueNode(graph, "User", screen_name = "neo4j")
sapply(lapply(outgoingRels(neo4j, "POSTS"), endNode), function(t) t$text)
query = "
MATCH (:Tweet)-[:MENTIONS]->(u:User)
RETURN u.screen_name AS user, COUNT(*) AS mentions
ORDER BY mentions DESC
LIMIT 10
"
cypher(graph, query)
graph = startGraph("http://localhost:7474/db/data/")
importSample(graph, "tweets")
neo4j = getUniqueNode(graph, "User", screen_name = "neo4j")
sapply(lapply(outgoingRels(neo4j, "POSTS"), endNode), function(t) t$text)
query = "
MATCH (:Tweet)-[:MENTIONS]->(u:User)
RETURN u.screen_name AS user, COUNT(*) AS mentions
ORDER BY mentions DESC
LIMIT 10
"
cypher(graph, query)
install.packages("Ryacas")
install.packages("mosaicManip")
install.packages("pracma")
df_xls = read.table("/users/bcarancibia/DG_BCA/AMP_Audit_Logger/Audit-logger.xls", header = TRUE)
library(gdata)
install.packages("gdata")
library(gdata)
df_xls = read.xls("/users/bcarancibia/DG_BCA/AMP_Audit_Logger/Audit-logger.xls", header = TRUE)
View(df_xls)
drop.df_xls
drop(df_xls)
View(df_xls)
audit = read.csv("users/bcarancibia/DG_BCA/AMP_Audit_Logger/audit_logger.csv", headers = TRUE)
audit = read.csv("users/bcarancibia/DG_BCA/AMP_Audit_Logger/audit_logger.csv", header = TRUE)
audit = read.csv("/users/bcarancibia/DG_BCA/AMP_Audit_Logger/audit_logger.csv", header = TRUE)
audit
audit_np = read.csv("/users/bcarancibia/DG_BCA/AMP_Audit_Logger/audit_logger_np.csv",
header = TRUE) #import honduras csv into R
View(audit_np)
install.packages("sqldf")
install.packages("forecast")
install.packages("plyr")
install.packages("dplyr")
install.packages("stringr")
install.packages("RPostgreSQL")
install.packages("RMySQL")
install.packages("RMongo")
install.packages("RODBC")
install.packages("RSQLite")
install.packages("lubridate")
install.packages("ggplot2")
install.packages("qcc")
install.packages("reshape2")
install.packages("randomForest")
View(audit_np)
View.head(audit_np)
head(audit_np)
View(audit_np)
View(audit)
summary(audit_np)
summary(audit_hn)
summary(audit)
length(audit_hn$Creation.Date)
length(audit$Creation.Date)
unique(audit$Creation.Date)
install.packages(ggmap)
install.packages("ggmap")
install.packages("RPostgreSQL")
install.packages("RPostgreSQL")
setwd(/users/bcarancibia/CUNY_IS_607)
setwd("/users/bcarancibia/CUNY_IS_607")
